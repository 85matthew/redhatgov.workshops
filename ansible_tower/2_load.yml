# file: 2_load.yml
---
# https://www.terraform.io/docs/providers/aws/index.html

- name: Wait for AWS AMIs to become initialized
  hosts: localhost
  tasks:
    - wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        timeout: 300
      with_items: "{{ groups.all_nodes }}"

- name: Configure repositories on all nodes
  become: yes
  remote_user: ec2-user
  hosts: tower_nodes
  roles:
    - { role: subscription_manager }
    - { role: epel }

- name: Configure repositories on tower nodes
  become: yes
  remote_user: ec2-user
  hosts: nodes
  roles:
    - { role: subscription_manager }

- name: Remove Red Hat EAP packages
  become: yes
  remote_user: ec2-user
  hosts: all_nodes
  tasks:
  - package:
      name: eap7-*
      state: absent

- name: Configure repositories on nodes
  become: yes
  remote_user: ec2-user
  hosts: le_node
  roles:
    - { role: LetsEncrypt }

- name: Configure software on nodes
  become: yes
  remote_user: ec2-user
  hosts: tower_nodes
  roles:
    - { role: nodejs }
    - { role: wetty }
    - { role: zsh }
    - { role: codiad }

- name: Prep walkthroughs for deployment
  become: yes
  remote_user: ec2-user
  hosts: tower_nodes
  vars:
    install: no
    prep: yes
  roles:
    - { role: ansible.tower }

- name: Configure software and deploy walkthroughs
  become: yes
  remote_user: ec2-user
  hosts: tower_nodes
  vars:
    install: yes
    prep: no
  roles:
    - { role: ansible.tower }

- name: Stage Maven POMs
  become: yes
  remote_user: ec2-user
  hosts: nodes
  roles:
    - { role: poms }

- name: Configure Cockpit
  become: yes
  remote_user: ec2-user
  hosts: all_nodes
  roles:
    - { role: cockpit }

- name: Upgrade packages
  become: yes
  remote_user: ec2-user
  hosts: all_nodes
  roles:
    - { role: upgrade }

