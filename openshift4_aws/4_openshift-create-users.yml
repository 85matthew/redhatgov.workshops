# https://docs.openshift.com/container-platform/4.3/authentication/identity_providers/configuring-htpasswd-identity-provider.html
# https://docs.openshift.com/container-platform/4.3/authentication/using-rbac.html#creating-cluster-admin_using-rbac
# https://docs.openshift.com/container-platform/4.3/authentication/remove-kubeadmin.html

# TODO: evaluate converting shell: oc commands to 'k8s' ansible module/plugin
# TODO: the 'k8s_facts' ansible module may aid in the conversion process
# kubectl create secret generic production-tls --from-file=./tls.key --from-file=./tls.crt --dry-run -o yaml | kubectl apply -f -

---
- hosts: localhost

  environment:
    KUBECONFIG: "{{ openshift_installer_path }}/auth/kubeconfig"  # "{{ ansible_env.PWD }}/auth/kubeconfig"
  vars:
    kubeadmin_password: "{{ lookup('file', '{{ openshift_installer_path }}/auth/kubeadmin-password') }}"


  tasks:
    - name: generate users.htpasswd file - create admin account entry
      htpasswd:
        create: yes
        path: "{{ openshift_installer_path }}/users.htpasswd"
        name: "{{ openshift_cluster_admin_username }}"
        password: "{{ openshift_cluster_admin_password }}"
        state: present

    - name: generate users.htpasswd file - create workshop user entries
      htpasswd:
        path: "{{ openshift_installer_path }}/users.htpasswd"
        name: "user{{ item }}"
        password: "{{ openshift_user_password }}"
      with_sequence: count="{{ openshift_user_count }}"

    - name: push users.htpasswd file to openshift control plane
      shell: |
        oc login https://api.{{ openshift_cluster_fqdn }}:6443 --username=kubeadmin --password={{ kubeadmin_password }}
        oc create secret generic htpass-secret --from-file=htpasswd={{ openshift_installer_path }}/users.htpasswd -n openshift-config
      ignore_errors: yes

    - name: template htpasswd custom resource config file
      template:
        src: "{{ openshift_installer_path }}/roles/templates/htpasswd-cr.yml.j2"
        dest: "{{ openshift_installer_path }}/htpasswd-cr.yml"

    - name: apply htpasswd custom resource identity provider
      shell: |
        oc login https://api.{{ openshift_cluster_fqdn }}:6443 --username=kubeadmin --password={{ kubeadmin_password }}
        oc apply -f {{ openshift_installer_path }}/htpasswd-cr.yml
      ignore_errors: yes

    - name: pausing 120 seconds to allow htpasswd authentication provider to start
      pause:
        seconds: 120

    - name: prime cluster_admin user and validate login
      shell: "oc login https://api.{{ openshift_cluster_fqdn }}:6443 --username={{ openshift_cluster_admin_username }} --password={{ openshift_cluster_admin_password }}"
      ignore_errors: yes

    - name: add cluster role to new admin account
      shell: |
        oc login https://api.{{ openshift_cluster_fqdn }}:6443 --username=kubeadmin --password={{ kubeadmin_password }}
        oc adm policy add-cluster-role-to-user cluster-admin {{ openshift_cluster_admin_username }}
    
    - name: delete kubeadmin
      shell: |
        oc login https://api.{{ openshift_cluster_fqdn }}:6443 --username={{ openshift_cluster_admin_username }} --password={{ openshift_cluster_admin_password }}
        oc delete secrets kubeadmin -n kube-system