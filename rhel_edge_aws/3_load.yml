# file: 2_load.yml
---

- name: Wait for AWS AMIs to become initialized
  hosts: localhost
  gather_facts: no
  tasks:
    - wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        timeout: 300
      with_items:
        - "{{ groups.rhel_nodes }}"
        - "{{ groups.tower_rhel_nodes }}"

- name: Configure repositories on all RHEL nodes
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  roles:
    - role: subscription_manager 
    - role: firewalld
    - role: epel

- name: Configure repositories on nodes
  become: yes
  remote_user: ec2-user
  hosts: le_node
  gather_facts: no
  roles:
    - role: LetsEncrypt
    
- name: Ensure python3-pip installed for powerline (RHEL 8)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tasks:
    - package:
        name: python3-pip
        state: latest
      when: rhel_ver == 'rhel8'    

- name: Configure software on nodes
  become: yes
  remote_user: ec2-user
  hosts: tower_rhel_nodes
  gather_facts: no
  roles:
    - role: system-user
    - role: powerline

- name: Configure web console (RHEL 7)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  roles:
    - role: wetty
      when: rhel_ver == 'rhel7'

- name: Configure web console (RHEL 8)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  roles:
    - role: cockpit
      when: rhel_ver == 'rhel8'

- name: Upgrade packages
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  roles:
    - role: upgrade

- name: Re-enable SCL repo when upgrade disables it
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  roles:
    - role: subscription_manager 

- name: Open ports 80,443 on nodes
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tasks:
    - name: open firewalld ports
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
      with_items:
      - 'http'
      - 'https'
    - name: restart service
      service:
        name: firewalld
        state: reloaded

- name: copy and install qemu
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tasks:
    - name: add codeready-builder repo
      community.general.rhsm_repository:
        name: codeready-builder-for-rhel-8-x86_64-rpms
      when: not cloud_access and ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8'

    - name: add codeready-builder rhui repo
      command: dnf config-manager --set-enabled codeready-builder-for-rhel-8-rhui-rpms
      when: cloud_access and ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8'

    - name: copy package
      copy:
        src: "{{ item }}"
        dest: "~ec2-user/"
      with_fileglob:
        - "/build/rpmbuild/RPMS/x86_64/qemu52*rpm"

    - name: find package
      find:
        paths: "~ec2-user"
        file_type: file
        patterns: "*.rpm"
      register: packages

    - name: install package
      dnf:
        name: "{{ item.path }}"
        disable_gpg_check: yes
        state: present
      loop: "{{ packages.files }}"

    - name: look up bin directory
      shell: rpm -ql qemu52 | grep bin | head -1 | sed 's]/bin.*]]'
      register: path

    - name: update bashrc with path
      lineinfile:
        path: "~ec2-user/.bashrc"
        regex: "^export PATH=.*"
        insertafter: EOF
        line: "export PATH={{ path.stdout }}/bin:$PATH"

    - name: update bashrc with manpath
      lineinfile:
        path: "~ec2-user/.bashrc"
        regex: "^export MANPATH=.*"
        insertafter: EOF
        line: "export MANPATH={{ path.stdout }}/share/man:$MANPATH"

- name: clone workshop repo
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tasks:
    - name: checkout code
      git:
        repo: https://github.com/rlucente-se-jboss/demo-rfe.git
        dest: ~ec2-user/edge-workshop

...
